{"body":"## douban-client\r\n\r\ndouban-client 是对豆瓣 API v2 接口进行了一个简单封装，主要包括了 OAuth 2.0 认证、图片上传以及接口方面的调用。\r\n\r\n目前已完成的接口有：\r\n``` \r\n* 用户 People\r\n* 广播 Miniblog\r\n* 豆邮 Doumail\r\n* 日记 Note\r\n* 相册 Album\r\n* 图片 Photo\r\n* 线上活动 Online\r\n* 讨论区 Discussion\r\n```\r\n\r\n正在进行开发中的接口有:\r\n```\r\n* 豆瓣猜 Guess\r\n* 同城活动 Event\r\n* 音乐 Music\r\n* 电影 Movie\r\n* 图书 Book\r\n* 回复 Comment\r\n```\r\n\r\n### 安装\r\n```\r\npip install douban-client\r\n```\r\n\r\n或\r\n```\r\neasy_install douban-client\r\n```\r\n\r\n### 使用说明\r\n\r\n#### OAuth 2.0 认证\r\n```\r\nfrom douban_client import DoubanClient\r\n\r\nAPI_KEY = 'your api key'\r\nAPI_SECRET = 'your api secret'\r\n\r\n# 在 OAuth 2.0 中，\r\n# 获取权限需要指定相应的 scope，请注意!!\r\nSCOPE = 'shuo_basic_r,shuo_basic_w'\r\n\r\nclient = DoubanClient(API_KEY, API_SECRET, SCOPE)\r\n\r\n# 以下方式 2 选 1:\r\n# 引导用户授权\r\nprint 'Go to the following link in your browser:' \r\nprint client.authorize_url\r\ncode = raw_input('Enter the verification code:')\r\nclient.auth_by_code(code)\r\n\r\n# 如果有之前有 token，则可以\r\nclient.auth_by_token(token)\r\n\r\n```\r\n\r\n至此，已经完成 OAuth 2.0 授权。\r\n\r\n#### 接口说明\r\n\r\n默认参数（参考豆瓣官方文档）:\r\n```\r\nstart: 0\r\ncount: 20\r\n```\r\n\r\n__用户 People__\r\n```\r\n# 以下 id 指用户数字 id\r\n当前用户 client.people.me\r\n指定用户 client.people.get(id) \r\n搜索用户 client.people.search(q)       # q: 搜索的关键词\r\n\r\n关注用户 client.people.follow(id)\r\n取消关注 client.people.unfollow(id)\r\n粉丝信息 client.people.followers(id, start, count)\r\n关注信息 client.people.following(id, start, count) \r\n关注关系 client.people.friendships(target_id, source_id) \r\n共同关注 client.people.follow_in_common(id, start,count) \r\n加入黑名单 client.people.block(id)\r\n```\r\n\r\n__广播 Miniblog__\r\n```\r\n# 以下 id 指广播数字 id\r\n当前用户Timeline client.miniblog.home_timeline(count)\r\n指定用户Timeline client.miniblog.user_timeline(user_id, count)\r\n@当前用户的广播  client.miniblog.mentions(count)\r\n\r\n获取一条广播 client.miniblog.get(id)\r\n新写一条广播 client.miniblog.new(text)\r\n新写一条带图片的广播 client.miniblog.new(text, image=open('/path/pic.png'))\r\n删除一条广播 client.miniblog.delete(id)\r\n\r\n获取某广播回复列表 client.miniblog.comments(id)\r\n回复某条广播 client.miniblog.comment(text)\r\n\r\n赞某广播 client.miniblog.like(id)\r\n取消赞某广播 client.miniblog.unlike(id)\r\n赞某广播用户列表 client.miniblog.liker(id)\r\n\r\n转发广播 client.miniblog.reshare(id)\r\n取消转发某广播 client.miniblog.unreshare(id)\r\n转发某广播的用户列表 client.miniblog.reshares(id)\r\n\r\n```\r\n\r\n__豆邮 Doumail__\r\n```\r\n# 以下 id 指豆邮数字 id\r\n获取一条豆邮 client.doumail.get(id)\r\n\r\n删除一条豆邮 client.doumail.delete(id)\r\n删除一批豆邮 client.doumail.deletes(ids) # ids: [id, id, id]\r\n\r\n收件箱中豆邮列表 client.doumail.inbox(start, count)\r\n发件箱中豆邮列表 client.doumail.outbox(start, count)\r\n未读豆邮列表 client.doumail.unread(start, count)\r\n\r\n```\r\n\r\n__日记 Note__\r\n```\r\n# 以下 id 指日记数字 id\r\n获取一条日记 client.note.get(id)\r\n新写一条日记 client.note.new(title, content)\r\n更新一条日记 client.note.update(title, content)\r\n删除一条日记 client.note.delete(id)\r\n\r\n喜欢一条日记 client.note.like(id)\r\n取消喜欢一条日记 client.note.unlike(id)\r\n\r\n获取用户日记列表 client.note.list(user_id, start, count)\r\n获取用户喜欢的日记列表 client.note.liked_list(user_id, start, count)\r\n\r\n```\r\n\r\n__相册 Album__\r\n```\r\n# 以下 id 指相册数字 id\r\n获取一个相册 client.album.get(id)\r\n新建一个相册 client.album.new(title, desc) # desc 描述文字\r\n删除一个相册 client.album.delete(id)\r\n\r\n获取用户相册列表 client.album.list(user_id)\r\n获取用户喜欢相册列表 client.album.liked_list(user_id)\r\n获取相册图片列表 client.album.photos(id)\r\n\r\n```\r\n\r\n__图片 Photo__\r\n```\r\n# 以下 id 指图片数字 id\r\n获取一张图片 client.photo.get(id)\r\n上传一张图片 client.photo.new(album_id, image) # image = open('/path/pic.png')\r\n更新图片描述 client.photo.update(id, desc)     # desc 为描述文字\r\n删除一条图片 client.photo.delete(id)\r\n\r\n喜欢一张图片 client.photo.like(id)\r\n取消喜欢一张图片 client.photo.unlike(id)\r\n\r\n```\r\n\r\n已实现的接口中单元测试覆盖超过 90%，如果文档中有没有说明的可以参考下： <https://github.com/liluo/douban-client/tree/master/tests>\r\n\r\n### 联系\r\n* 使用 douban-client 过程中遇到 bug, 可以到 [Issues](https://github.com/liluo/douban-client/issues) 反馈\r\n* 比较紧急的问题可以在 Douban 或者 Twitter @liluoliluo \r\n* 欢迎提 pull request\r\n","note":"Don't delete this file! It's used internally to help with page regeneration.","name":"Douban-client","tagline":"Python client library for Douban APIs (OAuth 2.0)","google":""}